
				
				//**** JS : removing duplicate objects from array(model) ***

				//1. using hashmap(Best Approach) : removing duplicate objects from array
				let hashmap = new Map();
				for(let i = 0; i < model.length; i++) {
					hashmap.set(model[i].ID, model[i]);
				}
				model = [...hashmap.values()];
				
				//2. using Set(Better Approach) : removing duplicate objects from array
				let set = new Set();
				let setArr = [];
				for (let i = 0; i < model.length; i++) {
					if (!set.has(model[i].ID)) {
						set.add(model[i].ID);
						setArr.push(model[i]);
					}
				}
				model = setArr;
				
				//3. using Set : removing duplicate objects from array
				let set = new Set();
				for (let i = 0; i < model.length; i++) {
					set.add(JSON.stringify(model[i]))		//stringify: convert obj to String
				}
				model = [];
				for(let x of set) {	//traverse Set
					model.push(JSON.parse(x));				//un-stringify: convert String to obj
				}
				
				//4. using .some() : removing duplicate objects from array
				let list = [];
				for (let i = 0; i < model.length; i++) {
					let exists = list.some(o => o.ID === model[i].ID);
					if (!exists) list.push(model[i]);
				}
				model = list;